apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-platform-android'

apply plugin: 'com.google.gms.google-services'

apply plugin: 'io.fabric'

// Load keystore
def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

ext.versionMajor = 3
ext.versionMinor = 1
ext.versionPatch = 0
ext.versionClassifier = null
ext.isSnapshot = false  //only true while in development
ext.minimumSdkVersion = 17


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.job.whatsappstories"
        minSdkVersion 17
        targetSdkVersion 29
        versionCode generateVersionCode() // 170302000
        versionName generateVersionName() // 3.0.5
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }


    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        debug {
            resValue("bool", "FIREBASE_CRASH_ENABLED", "false")
        }

        release {
            resValue("bool", "FIREBASE_CRASH_ENABLED", "true")
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
        exclude 'META-INF/LICENSE'
    }

    dexOptions {
        //may speed up incremental builds
        preDexLibraries true
    }
}


dependencies {
    def glide_version = "4.9.0"

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Support libs
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.exifinterface:exifinterface:1.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'

    // Kotlin libs
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.anko:anko-common:$anko_version"
    implementation "org.jetbrains.anko:anko-commons:$anko_version"
    implementation "org.jetbrains.anko:anko-design:$anko_version"

    // Images libs
    implementation 'com.github.bumptech.glide:glide:' + glide_version
    annotationProcessor 'com.github.bumptech.glide:compiler:' + glide_version
    implementation 'com.github.chrisbanes:PhotoView:2.1.3'

    // Iconics libs
    implementation 'com.mikepenz:iconics-core:3.0.3@aar'
    implementation 'com.mikepenz:iconics-views:3.0.3@aar'
    implementation 'com.mikepenz:ionicons-typeface:2.0.1.4@aar'
    implementation 'com.mikepenz:fontawesome-typeface:5.0.6.0@aar'
    implementation 'com.mikepenz:actionitembadge:3.3.2@aar'

    // Views libs
    implementation 'com.makeramen:roundedimageview:2.3.0'

    //play update core
    implementation 'com.google.android.play:core:1.7.1'

    // Other libs
    implementation 'com.github.kizitonwose.time:time-android:1.0.1'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Constraining layout
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    // Permissions
    implementation 'com.karumi:dexter:5.0.0'

    // Video
    implementation 'cn.jzvd:jiaozivideoplayer:6.2.12'

    // shimmer
    implementation 'com.github.sharish:ShimmerRecyclerView:v1.3'

    //sliding root nav
    implementation 'com.yarolegovich:sliding-root-nav:1.1.0'

    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    //ads
    implementation project(':nativetemplates')

    //firebase
    implementation 'com.google.firebase:firebase-core:17.3.0'
    implementation 'com.google.firebase:firebase-ads:19.0.1'
    implementation 'com.google.firebase:firebase-messaging:20.1.4'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    implementation 'com.google.firebase:firebase-dynamic-links:19.1.0'
    implementation 'com.google.firebase:firebase-inappmessaging-display:19.0.4'
    implementation 'com.google.firebase:firebase-auth:19.3.0'
    implementation 'com.google.android.gms:play-services-auth:18.0.0'
    implementation 'com.google.firebase:firebase-firestore:21.4.2'
}

kapt {
    generateStubs = true
    mapDiagnosticLocations = true
}

private Integer generateVersionCode() {
    return ext.minimumSdkVersion * 10000000 + ext.versionMajor * 10000 + ext.versionMinor * 100 + ext.versionPatch
}

private String generateVersionName() {
    String versionName = "${ext.versionMajor}.${ext.versionMinor}.${ext.versionPatch}"
    if (ext.versionClassifier == null && ext.isSnapshot) {
        ext.versionClassifier = "SNAPSHOT"
    }

    if (ext.versionClassifier != null) {
        versionName += "-" + ext.versionClassifier
    }
    return versionName
}
